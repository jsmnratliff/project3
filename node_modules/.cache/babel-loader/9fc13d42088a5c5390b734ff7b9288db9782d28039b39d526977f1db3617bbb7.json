{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jasmi\\\\OneDrive\\\\Desktop\\\\PerScholas\\\\Projects\\\\project3\\\\src\\\\StoreContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreContext = /*#__PURE__*/createContext(null);\nexport const StoreProvider = ({\n  children\n}) => {\n  _s();\n  const [isStoreUpdated, setIsStoreUpdated] = useState(true);\n  const [store, setStore] = useState(); // Renamed Store to store to match the variable name\n  const [searchState, setSearchState] = useState();\n  return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n    value: {\n      store,\n      setStore,\n      searchState,\n      setSearchState,\n      isStoreUpdated,\n      setIsStoreUpdated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreProvider, \"8gCxItNxXHAk6JEenKxKXVg3/g4=\");\n_c = StoreProvider;\nexport const useStore = () => {\n  _s2();\n  return useContext(StoreContext);\n};\n_s2(useStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"names":["React","useContext","createContext","useState","jsxDEV","_jsxDEV","StoreContext","StoreProvider","children","_s","isStoreUpdated","setIsStoreUpdated","store","setStore","searchState","setSearchState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStore","_s2","$RefreshReg$"],"sources":["C:/Users/jasmi/OneDrive/Desktop/PerScholas/Projects/project3/src/StoreContext.js"],"sourcesContent":["import React, { useContext, createContext, useState } from 'react';\r\n\r\nconst StoreContext = createContext(null);\r\n\r\nexport const StoreProvider = ({ children }) => {\r\n  const [isStoreUpdated, setIsStoreUpdated] = useState(true);\r\n  const [store, setStore] = useState(); // Renamed Store to store to match the variable name\r\n  const [searchState, setSearchState] = useState();\r\n\r\n  return (\r\n    <StoreContext.Provider value={{ store, setStore, searchState, setSearchState, isStoreUpdated, setIsStoreUpdated }}>\r\n      {children}\r\n    </StoreContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useStore = () => useContext(StoreContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,IAAI,CAAC;AAExC,OAAO,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAEhD,oBACEE,OAAA,CAACC,YAAY,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEL,KAAK;MAAEC,QAAQ;MAAEC,WAAW;MAAEC,cAAc;MAAEL,cAAc;MAAEC;IAAkB,CAAE;IAAAH,QAAA,EAC/GA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAAZ,EAAA,CAVYF,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAY1B,OAAO,MAAMgB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACK,YAAY,CAAC;AAAA;AAACkB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}